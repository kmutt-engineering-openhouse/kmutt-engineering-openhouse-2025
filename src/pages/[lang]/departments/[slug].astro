---
import Layout from "../../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { getDict } from "../../../i18n/getDict";
import Section from "../../../components/common/Section.astro";
import { Image } from "astro:assets";
import SocialIcon from "../../../components/common/SocialIcon.astro";
import { parseEntryId, isSupportedLocale } from "../../../utils";
import type { Locale } from "../../../constants";

export async function getStaticPaths() {
  const all = await getCollection("departments");
  return all.map((entry: any) => {
    const { lang, slug } = parseEntryId(entry.id);
    return {
      params: { lang, slug },
      props: { entry },
    };
  });
}

const { lang, slug } = Astro.params;
const { entry } = Astro.props;

// Validate and normalize language
const currentLang: Locale = isSupportedLocale(lang) ? lang : "th";
const dict = getDict(currentLang);

// Get the entry if not passed as prop
const departmentEntry =
  entry ||
  (await getCollection("departments")).find((e: any) => {
    const { lang: eLang, slug: eSlug } = parseEntryId(e.id);
    return eLang === currentLang && eSlug === slug;
  });

if (!departmentEntry) {
  throw new Error(`Department not found: ${currentLang}/${slug}`);
}

const { data } = departmentEntry as any;

// Dynamic image loading
const images = import.meta.glob("../../../assets/images/departments/*", { eager: true });
let imageSrc = null;

if (data.image) {
  const imagePath = `../../../assets/images/departments/${data.image.split("/").pop()}`;
  imageSrc = (images[imagePath] as any)?.default || null;
}

// Generate page title
const pageTitle =
  currentLang === "th"
    ? `วิศวกรรม${data.title} - KMUTT Engineering Open House 2025`
    : `${data.title} Engineering - KMUTT Engineering Open House 2025`;
---

<Layout title={pageTitle} description={data.description} t={dict} currentLang={currentLang}>
  <Section class="flex flex-col gap-4" padding="md">
    <!-- Hero Image -->
    {
      imageSrc && (
        <Image
          src={imageSrc}
          alt={data.title}
          class="aspect-[2/1] w-full rounded-2xl object-cover select-none"
          loading="eager"
          fetchpriority="high"
          format="webp"
          quality={85}
          sizes="(max-width: 640px) 100vw, (max-width: 1024px) 100vw, 1280px"
        />
      )
    }

    <!-- Title -->
    <header class="text-center">
      {
        currentLang === "th" ? (
          <h1 class="font-prompt text-xl">
            วิศวกรรม
            <br />
            <span class="text-4xl font-extrabold">{data.title}</span>
          </h1>
        ) : (
          <h1 class="font-prompt text-xl">
            <span class="text-4xl font-extrabold">{data.title}</span>
            <br />
            Engineering
          </h1>
        )
      }
    </header>

    <!-- Description -->
    <p class="font-jamjuree text-sm leading-relaxed whitespace-pre-line sm:text-base">
      {data.description}
    </p>

    <!-- Sections -->
    {
      data.sections && data.sections.length > 0 && (
        <div class="mt-4 flex flex-col gap-4">
          {data.sections.map((section: any) => (
            <article class="rounded-2xl border border-gray-300 bg-white p-4">
              <h2 class="font-prompt text-base font-semibold sm:text-lg">{section.heading}</h2>

              {/* Contact section with social links */}
              {"contract" in section && section.contract && section.contract.length > 0 && (
                <ul class="font-jamjuree mt-2 space-y-1 text-sm sm:text-base">
                  {section.contract.map((item: any) => (
                    <li class="flex items-center gap-2">
                      <SocialIcon type={item.type} size="md" />
                      <a
                        class="underline transition-colors duration-200 hover:no-underline"
                        href={item.link}
                        target="_blank"
                        rel="noopener noreferrer"
                        aria-label={`${item.title} (${item.type})`}
                      >
                        {item.title}
                      </a>
                    </li>
                  ))}
                </ul>
              )}

              {/* Regular content section */}
              {!("contract" in section) && (
                <>
                  {"body" in section && section.body && (
                    <p class="font-jamjuree mt-2 text-sm leading-relaxed whitespace-pre-line sm:text-base">
                      {section.body}
                    </p>
                  )}
                  {"list" in section && section.list && section.list.length > 0 && (
                    <ul class="font-jamjuree mt-2 list-disc pl-5 text-sm leading-relaxed sm:text-base">
                      {section.list.map((listItem: string) => (
                        <li>{listItem}</li>
                      ))}
                    </ul>
                  )}
                </>
              )}
            </article>
          ))}
        </div>
      )
    }
  </Section>
</Layout>
