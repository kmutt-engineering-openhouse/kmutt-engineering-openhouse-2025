---
import Heading from "../../../components/common/Heading.astro";
import { getDict, getWorkshopDict } from "../../../i18n/getDict";
import iconEYE from "../../../assets/icons/eye.svg";
import iconARROWRIGHT from "../../../assets/icons/arrow-right.svg";
import iconBACKARROW from "../../../assets/icons/back-arrow.svg";
import Layout from "../../../layouts/Layout.astro";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { workshopDepartments } from "../../../i18n/dict/workshop/workshop-departments";

// Define static paths for the [lang] parameter
export function getStaticPaths() {
  return ["th", "en"].map((lang) => ({ params: { lang } }));
}

const { lang } = Astro.params as { lang: "th" | "en" };
const t = getDict(lang === "en" ? "en" : "th");
const workshopT = getWorkshopDict(lang === "en" ? "en" : "th");

// Import all workshop images
const images = await import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/images/workshops/cover/*.{webp,jpg,png}",
  {
    eager: true,
  }
);

// Pre-compute image map for O(1) lookups
const imageMap = new Map<string, ImageMetadata>();
Object.entries(images).forEach(([path, module]) => {
  const filename = path
    .split("/")
    .pop()
    ?.replace(/\.(webp|jpg|png)$/, "");
  if (filename) {
    imageMap.set(filename, module.default);
  }
});

const getImageByCode = (code: string): ImageMetadata | undefined => {
  return imageMap.get(code);
};

const seo = {
  title: lang === "en" ? "All Workshops" : "กิจกรรมเวิร์คช็อปทั้งหมด",
  description:
    lang === "en"
      ? "Join KMUTT Engineering Open House 2025 on October 10-12, 2025. Explore 10 engineering departments, workshops, exhibitions, and competitions at King Mongkut's University of Technology Thonburi (Bangmod Campus). Free registration for high school students, parents, and teachers."
      : "ร่วมงานเปิดบ้านคณะวิศวกรรมศาสตร์ มจธ. 2568 วันที่ 10-12 ตุลาคม 2568 สำรวจ 10 ภาควิชาวิศวกรรม เวิร์คช็อป นิทรรศการ และการแข่งขันที่มหาวิทยาลัยเทคโนโลยีพระจอมเกล้าธนบุรี (บางมด) ลงทะเบียนฟรีสำหรับนักเรียนมัธยมปลาย ผู้ปกครอง และครู",
  keywords:
    lang === "en"
      ? "KMUTT Engineering Open House 2025, Faculty of Engineering, Bangmod, KMUTT, Workshop, Exhibition, Competition, University, Thailand, Engineering Departments, High School, Education"
      : "งานเปิดบ้านคณะวิศวกรรมศาสตร์, มจธ, 2568, บางมด, เวิร์คช็อป, นิทรรศการ, การแข่งขัน, มหาวิทยาลัย, วิศวกรรม, นักเรียนมัธยมปลาย, การศึกษา",
  image: "https://bangmod.engineer/src/assets/logo/oph2025.webp",
  type: "website",
};
---

<Layout t={t} currentLang={lang} seo={seo}>
  <style>
    /* WebKit: thin thumb, transparent track, remove arrows/corner */
    #custom-select-list::-webkit-scrollbar-track, #custom-select-list::-webkit-scrollbar-track-piece { background: transparent; }
    #custom-select-list::-webkit-scrollbar-thumb { background-color: rgb(58 62 148 ); border-radius: 9999px; border: 1px solid transparent; background-clip: padding-box; }
    #custom-select-list:hover::-webkit-scrollbar-thumb { background-color: rgb(58 62 148 ); }
    #custom-select-list::-webkit-scrollbar-button { display: none; width: 0; height: 0; }
    #custom-select-list::-webkit-scrollbar-corner { background: transparent; }

    /* Firefox: thin + transparent track */
    #custom-select-list { scrollbar-width: thin; scrollbar-color: rgb(58 62 148 ) transparent; }
  </style>
  <!-- Hero Section -->
  <section class="relative bg-gradient-to-br from-primary via-primary to-primary-hover py-20">
    <div class="absolute inset-0 bg-black/10"></div>
    <div class="relative mx-auto max-w-7xl px-4 text-center">
      <h1 
        class="scroll-animate animate-fade-up mb-4 font-prompt text-4xl font-bold text-white md:text-5xl lg:text-6xl"
        data-delay="0"
      >
        {workshopT.title || "Workshops"}
      </h1>
      <p 
        class="scroll-animate animate-fade-up mx-auto max-w-3xl font-jamjuree text-lg text-white/90 md:text-xl"
        data-delay="1"
      >
        {workshopT.description || (lang === "en" ? "Discover hands-on learning experiences" : "สำรวจประสบการณ์การเรียนรู้แบบลงมือทำ")}
      </p>
    </div>
  </section>

  <!-- Workshops Grid -->
  <main class="mx-auto max-w-7xl px-4 py-16">
    <!-- Custom Filter Selector -->
    <div class="mb-8 flex  flex-col items-start sm:flex-row sm:items-center gap-3">
      <label id="workshop-filter-label" class="font-prompt font-semibold text-sm text-primary">{lang === "en" ? "Filter by department:" : "กรองตามภาควิชา:"}</label>

      <div id="custom-workshop-select" class="relative inline-block text-left">
        <button id="custom-select-button" type="button" aria-haspopup="listbox" aria-expanded="false" class="inline-flex w-fit items-center justify-between gap-2 rounded-lg border border-gray-200 bg-white py-2 px-3 text-sm text-primary font-semibold shadow-sm focus:outline-none focus:ring-2 focus:ring-primary/30">
          <span id="custom-select-value">{lang === "en" ? workshopDepartments[0].label_en : workshopDepartments[0].label_th}</span>
          <svg class="h-4 w-4 text-primary" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path fill-rule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 10.94l3.71-3.71a.75.75 0 111.06 1.06l-4.24 4.24a.75.75 0 01-1.06 0L5.21 8.29a.75.75 0 01.02-1.08z" clip-rule="evenodd" /></svg>
        </button>

        <ul id="custom-select-list" role="listbox" tabindex="-1" aria-labelledby="workshop-filter-label" class="absolute left-0 z-10 mt-2 w-[300px] origin-top-left divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none hidden max-h-56 overflow-auto">
          {
            workshopDepartments.map((d) => (
              <li role="option" data-value={d.code} class="cursor-pointer px-3 py-2 text-sm font-medium text-primary hover:bg-primary/10 focus:bg-primary/10" tabindex="0">{lang === "en" ? d.label_en : d.label_th}</li>
            ))
          }
        </ul>
      </div>
    </div>
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {
        workshopT.workshops.map((workshop, index) => {
          const workshopImage = getImageByCode(workshop.code);
          return workshopImage ? (
            <article 
              data-depart={workshop.depart_code}
              class="scroll-animate animate-fade-up group flex flex-col overflow-hidden rounded-3xl bg-white shadow-xl transition-all duration-300 hover:-translate-y-2 hover:shadow-2xl h-full"
              data-delay={
                (index) % 3 + 4
              }
            >
              <!-- Image Container -->
              <div class="relative aspect-[4/3] overflow-hidden">
                <Image
                  src={workshopImage}
                  alt={workshop.title}
                  class="h-full w-full object-cover transition-transform duration-500 group-hover:scale-110"
                />
                <!-- Gradient Overlay -->
                <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                
                <!-- Date Badge -->
                <div class="absolute top-4 left-4 rounded-full bg-white/90 px-3 py-1 text-sm font-medium text-gray-800 backdrop-blur-sm">
                  {workshop.date}
                </div>
                
                <!-- Hover Icon -->
                <div class="absolute top-4 right-4 w-10 h-10 bg-white/20 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 transform scale-75 group-hover:scale-100">
                  <Image src={iconEYE} alt="View" class="w-5 h-5 text-white" />
                </div>
              </div>
              
              <!-- Content -->
              <div class="flex flex-col flex-1 p-6">
                <h2 class="mb-3 font-prompt text-xl font-bold text-gray-900 group-hover:text-primary transition-colors duration-300 line-clamp-2">
                  {workshop.title}
                </h2>
                <p class="mb-6 font-jamjuree text-gray-600 leading-relaxed line-clamp-3 flex-1">
                  {workshop.description}
                </p>
                
                <!-- Action Button -->
                <div class="flex items-center justify-between">
                  <span class="text-sm font-bold text-primary">
                    {workshop.department}
                  </span>
                  <a 
                    href={`/${lang}/workshop/${workshop.code}`}
                    class="group/btn flex items-center gap-2 rounded-xl bg-gradient-to-r from-primary to-primary-hover px-6 py-3 font-prompt font-semibold text-white transition-all duration-300 hover:shadow-lg hover:shadow-primary/25 hover:scale-105"
                  >
                    <span>{lang === "en" ? "Read More" : "เพิ่มเติม"}</span>
                    <Image src={iconARROWRIGHT} alt="Arrow" class="w-4 h-4 transition-transform duration-300 group-hover/btn:translate-x-1" style="filter: brightness(0) invert(1);" />
                  </a>
                </div>
              </div>
            </article>
          ) : null;
        })
      }
    </div>
    
    <!-- Back to Home Button -->
    <div class="mt-16 text-center">
      <a 
        href={`/${lang}/`}
        class="scroll-animate animate-fade-up inline-flex items-center gap-2 rounded-2xl border-2 border-primary bg-white px-8 py-4 font-prompt font-semibold text-primary transition-all duration-300 hover:bg-primary hover:text-white hover:shadow-lg"
        data-delay="1"
      >
        <Image src={iconBACKARROW} alt="Back" class="w-5 h-5" />
        <span>{lang === "en" ? "Back to Home" : "กลับหน้าแรก"}</span>
      </a>
    </div>
  </main>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      setTimeout(() => {
        if (typeof window !== 'undefined' && (window as any).scrollAnimationManager) {
          (window as any).scrollAnimationManager.observeElements();
        }
      }, 100);
    });
  </script>
  <script>
    // Workshop filter functionality (select dropdown)
    document.addEventListener('DOMContentLoaded', () => {
    const articles = Array.from(document.querySelectorAll('main article[data-depart]')) as HTMLElement[];
      // Ensure articles have animation-ready classes
      articles.forEach(a => {
        a.classList.add('transform', 'transition-all', 'duration-300', 'ease-out');
        a.classList.remove('opacity-0', 'scale-95');
      });

      function showArticle(a: HTMLElement) {
        // Make visible and animate in
        a.style.display = '';
        // allow DOM update then remove hidden classes
        requestAnimationFrame(() => {
          a.classList.remove('opacity-0', 'scale-95');
          a.classList.add('opacity-100', 'scale-100');
        });
      }

      function hideArticle(a: HTMLElement) {
        // animate out then set display none
        a.classList.remove('opacity-100', 'scale-100');
        a.classList.add('opacity-0', 'scale-95');
        setTimeout(() => {
          // only hide if still hidden (prevent race)
          if (a.classList.contains('opacity-0')) {
            a.style.display = 'none';
          }
        }, 300);
      }

      function applyFilter(depart: string) {
        articles.forEach(a => {
          const aDepart = (a.getAttribute('data-depart') || '').toLowerCase();
          if (depart === 'all' || aDepart === depart.toLowerCase()) {
            // show
            showArticle(a);
          } else {
            // hide
            hideArticle(a);
          }
        });
      }

      // Setup custom select interactions
      const customSelect = document.getElementById('custom-workshop-select');
      const button = document.getElementById('custom-select-button') as HTMLButtonElement | null;
      const list = document.getElementById('custom-select-list') as HTMLElement | null;
      const valueEl = document.getElementById('custom-select-value') as HTMLElement | null;

      if (!customSelect || !button || !list || !valueEl) {
        // Fallback: if custom select missing, do nothing
        return;
      }

      const options = Array.from(list.querySelectorAll('li[role="option"]')) as HTMLElement[];

      function closeList() {
        list!.classList.add('hidden');
        button!.setAttribute('aria-expanded', 'false');
      }

      function openList() {
        list!.classList.remove('hidden');
        button!.setAttribute('aria-expanded', 'true');
        // focus first option
        const first = options[0];
        if (first) first.focus();
      }

      function selectOption(opt: HTMLElement) {
        const code = opt.dataset.value || 'all';
        const label = opt.textContent || '';
        valueEl!.textContent = label;
        closeList();
        // small pulse on label to emphasize change
        const topLabel = document.getElementById('workshop-filter-label');
        if (topLabel) {
          topLabel.classList.add('animate-pulse');
          setTimeout(() => topLabel.classList.remove('animate-pulse'), 300);
        }
        applyFilter(code);
      }

      // Click handlers
      button.addEventListener('click', (e) => {
        const expanded = button.getAttribute('aria-expanded') === 'true';
        if (expanded) closeList(); else openList();
      });

      options.forEach(opt => {
        opt.addEventListener('click', () => selectOption(opt));
        opt.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') {
            e.preventDefault();
            selectOption(opt);
          } else if (e.key === 'ArrowDown') {
            const next = opt.nextElementSibling as HTMLElement | null;
            if (next) next.focus();
          } else if (e.key === 'ArrowUp') {
            const prev = opt.previousElementSibling as HTMLElement | null;
            if (prev) prev.focus();
            else button.focus();
          } else if (e.key === 'Escape') {
            closeList();
            button.focus();
          }
        });
      });

      // Close on outside click
      document.addEventListener('click', (ev) => {
        if (!customSelect.contains(ev.target as Node)) {
          closeList();
        }
      });

      // Initialize: show all
      applyFilter('all');
    });
  </script>
</Layout>
