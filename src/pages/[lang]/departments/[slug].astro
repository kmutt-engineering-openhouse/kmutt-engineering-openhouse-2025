---
import Layout from "../../../layouts/Layout.astro";
import Heading from "../../../components/common/Heading.astro";
import { getCollection } from "astro:content";
import { getDict } from "../../../i18n/getDict";
import { Image } from "astro:assets";
import FacebookIcon from "../../../assets/icons/facebook.svg";
import InstagramIcon from "../../../assets/icons/instagram.svg";
import WebsiteIcon from "../../../assets/icons/website.svg";
import EmailIcon from "../../../assets/icons/email.svg";
import TiktokIcon from "../../../assets/icons/tiktok.svg";
import iconLOC from "../../../assets/icons/location.svg";

export async function getStaticPaths() {
  const all = await getCollection("departments");
  return all.map((e) => {
    const [lang, file] = e.id.split("/");
    return { params: { lang, slug: file.replace(/\.(md|mdx)$/i, "") } };
  });
}

const { lang, slug } = Astro.params;
const dict = getDict(lang as "th" | "en");

const entry = (await getCollection("departments")).find((e) => {
  const [eLang, file] = e.id.split("/");
  return eLang === lang && file.replace(/\.(md|mdx)$/i, "") === slug;
});
if (!entry) throw new Error(`Department not found: ${lang}/${slug}`);

const { data } = entry;

const images = import.meta.glob("../../../assets/images/departments/*", { eager: true });

let imageSrc = null;
if (data.image) {
  const imagePath = `../../../assets/images/departments/${data.image.split("/").pop()}`;
  imageSrc = (images[imagePath] as any)?.default || null;
}

const verifySection =  (s: { heading: string }) => {
  if (s.heading === "กิจกรรมในงาน KMUTT Engineering Open House 2025" || s.heading === "Activities at KMUTT Engineering Open House 2025") return 1;
  if (s.heading === "อาชีพในอนาคต" || s.heading === "Career Path") return 2;
  if (s.heading != "") return 3;
  return -1;
};
---

<Layout t={dict} currentLang={lang}>
  <section class="mx-auto flex w-full max-w-7xl flex-col gap-4 px-4 py-4">
    {
      imageSrc && (
        <Image
          src={imageSrc}
          alt={data.title}
          class="aspect-[2/1] w-full select-none rounded-2xl object-cover sm:aspect-[16/6]"
          loading="eager"
          decoding="async"
          quality={100}
          format="webp"
          width={1280}
          sizes="(max-width: 1280px) 100vw, (max-width: 1280px) 100vw, 1280px"
        />
      )
    }

    {
      lang === "th" ? (
        <h1 class="text-center font-prompt text-xl">
          วิศวกรรม
          <br />
          <span class="text-4xl font-extrabold">{data.title}</span>
        </h1>
      ) : (
        <h1 class="text-center font-prompt text-xl">
          <>
            <span class="text-4xl font-extrabold">{data.title}</span>
            <br />
          </>
          Engineering
        </h1>
      )
    }

    <p class="whitespace-pre-line text-center font-ibm text-sm leading-relaxed sm:text-base">
      {data.description}
    </p>

    <div class="mt-4 flex flex-col gap-4">
      {
        data.sections?.map((s) => {
          const sectionType = verifySection(s);
          return (
            <>
              {sectionType > 0 ? <Heading t={s.heading} class=" !px-0 !sm:px-0 !mx-0 !sm:mx-0" /> : null}
              <section class="rounded-2xl border border-gray-300 bg-white p-4">
                {s.contract ? (
                  <ul class="mt-2 space-y-1 font-ibm text-sm sm:text-base">
                    {s.contract.map((item) => (
                      <li class="flex items-center gap-2">
                        {item.type === "facebook" && <FacebookIcon class="inline h-5 w-5" />}
                        {item.type === "instagram" && <InstagramIcon class="inline h-5 w-5" />}
                        {item.type === "website" && <WebsiteIcon class="inline h-5 w-5" />}
                        {item.type === "email" && <EmailIcon class="inline h-5 w-5" />}
                        {item.type === "tiktok" && <TiktokIcon class="inline h-5 w-5" />}
                        <a
                          href={item.link}
                          target="_blank"
                          rel="noopener noreferrer"
                          aria-label={`Visit ${item.title} - Opens in new window`}
                        >
                          {item.title}
                        </a>
                      </li>
                    ))}
                  </ul>
                ) : (
                  <>
                    {s.body && (
                      <p class="mt-2 whitespace-pre-line font-ibm text-sm leading-relaxed sm:text-base">
                        {s.body}
                      </p>
                    )}
                    {s.list && (
                      <ul
                        class={
                          `mt-2 pl-1 relative font-ibm text-sm leading-relaxed sm:text-base ` 
                          + (sectionType === 2 ? "list-disc !pl-5 sm:!pl-10 " : "list-none") 
                          // + (sectionType === 3 ? "list-none" : "")
                        }
                      >
                        {s.list.map((li) => (
                          <>
                            {/* {sectionType !== 2 ? <span class="absolute left-1.5 ">-</span> : null} */}
                            <li set:html={li} />
                          </>
                        ))}
                      </ul>
                    )}
                    {s.chips && (
                      <div class="mt-3 flex flex-wrap gap-2 ml-1">
                        {s.chips.map((chip) => (
                          <a
                            href={chip.link}
                            target="_blank"
                            rel="noopener noreferrer"
                            aria-label={`Visit ${chip.title} - Opens in new window`}
                            class="inline-flex items-center rounded-full bg-gray-100 px-3 py-2 text-xs font-medium no-underline transition-colors duration-200 hover:bg-gray-200"
                            style="color: var(--color-primary)"
                          >
                            {chip.title.includes("Location") || chip.title.includes("สถานที่") ? (
                              <Image src={iconLOC} alt="" class="mr-2 h-4 w-4 flex-shrink-0" />
                            ) : null}
                            {chip.title}
                          </a>
                        ))}
                      </div>
                    )}
                  </>
                )}
              </section>
            </>
          );
        })
      }
    </div>
  </section>
</Layout>
