---
import type { FadeAnimationProps } from "../../types";

interface Props extends FadeAnimationProps {
  maxWidth?: "sm" | "md" | "lg" | "xl" | "2xl" | "7xl" | "full";
  padding?: "none" | "sm" | "md" | "lg";
  as?: keyof HTMLElementTagNameMap;
}

const {
  class: className = "",
  maxWidth = "7xl",
  padding = "md",
  as: Element = "section",
  "data-fade": dataFade,
  style,
  ...attrs
} = Astro.props as Props;

const maxWidthClasses = {
  sm: "max-w-sm",
  md: "max-w-md",
  lg: "max-w-lg",
  xl: "max-w-xl",
  "2xl": "max-w-2xl",
  "7xl": "max-w-7xl",
  full: "max-w-full",
} as const;

const paddingClasses = {
  none: "",
  sm: "px-2 py-2",
  md: "px-4 py-4",
  lg: "px-6 py-8",
} as const;

const baseClasses = "mx-auto w-full";
const maxWidthClass = maxWidthClasses[maxWidth];
const paddingClass = paddingClasses[padding];

const combinedClasses = [baseClasses, maxWidthClass, paddingClass, className]
  .filter(Boolean)
  .join(" ");

const fadeProps = dataFade ? { "data-fade": true } : {};
const styleProps = style ? { style } : {};
---

<Element class={combinedClasses} {...fadeProps} {...styleProps} {...attrs}>
  <slot />
</Element>
