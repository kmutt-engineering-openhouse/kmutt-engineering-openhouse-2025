---
import NavbarLogo from "./NavbarLogo.astro";

const { t, currentLang } = Astro.props;
---

<nav class="bg-white relative">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      
      <!-- Logo -->
      <div class="flex-shrink-0">
        <NavbarLogo />
      </div>
      
      <!-- Desktop Menu (มากกว่าเท่ากับ1024px) -->
      <div class="hidden lg:block">
        <div class="ml-10 flex items-baseline space-x-8">
          <a href="#highlight" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.highlight}
          </a>
          <a href="#departments" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.departments}
          </a>
          <a href="#activities" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.activities}
          </a>
          <a href="#competitions" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.competitions}
          </a>
          <a href="#venue" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.venue}
          </a>
          <a href="#faq" class="text-[#3A3E94] hover:text-[#69357c] px-3 py-2 font-prompt font-bold text-base leading-none transition-colors">
            {t.nav.menu.faq}
          </a>
        </div>
      </div>
      
      <!-- Language Switcher & Mobile menu button -->
      <div class="flex items-center space-x-2">
        <!-- Language Switcher -->
        <a
          href={currentLang === "th" ? "/en/" : "/th/"}
          class="flex items-center space-x-2 font-prompt font-bold text-base leading-none"
        >
          <span class={`px-2 py-1 ${currentLang === "th" ? "text-[#3A3E94]" : "text-gray-500"}`}>
            {t.nav.language.th}
          </span>
          <span class="text-gray-300">|</span>
          <span class={`px-2 py-1 ${currentLang === "en" ? "text-[#3A3E94]" : "text-gray-500"}`}>
            {t.nav.language.en}
          </span>
        </a>
        
        <!-- Mobile menu button (น้อยกว่า1024px) -->
        <button type="button" data-mobile-menu-button class="lg:hidden text-[#3A3E94] hover:text-[#69357c] focus:outline-none focus:ring-2 focus:ring-inset focus:ring-[#3A3E94] p-2">
          <span class="sr-only">Open main menu</span>
          <svg class="h-6 w-6 hamburger-icon" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
          <svg class="h-6 w-6 close-icon hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
    </div>
  </div>
  
  <!-- Mobile menu dropdown (น้อยกว่า1024px) -->
  <div class="lg:hidden hidden absolute top-full left-0 right-0 z-50 bg-white/90 shadow-lg border border-gray-200 transform transition-all duration-300 ease-out opacity-0 -translate-y-2" id="mobile-menu">
    <div class="w-[361px] mx-auto">
      <div class="flex flex-col gap-2 p-2">
        <a href="#highlight" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.highlight}
        </a>
        <a href="#departments" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.departments}
        </a>
        <a href="#activities" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.activities}
        </a>
        <a href="#competitions" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.competitions}
        </a>
        <a href="#venue" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.venue}
        </a>
        <a href="#faq" class="text-[#3A3E94] hover:text-[#69357c] block px-4 py-2 font-prompt font-bold text-base leading-none transition-colors rounded-lg text-center">
          {t.nav.menu.faq}
        </a>
      </div>
    </div>
  </div>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.querySelector('[data-mobile-menu-button]');
    const mobileMenuClose = document.querySelector('[data-mobile-menu-close]');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu) {
      mobileMenuButton.addEventListener('click', function() {
        const isCurrentlyHidden = mobileMenu.classList.contains('hidden');
        
        if (isCurrentlyHidden) {
          mobileMenu.classList.remove('hidden');
          setTimeout(() => {
            mobileMenu.classList.remove('opacity-0', '-translate-y-2');
            mobileMenu.classList.add('opacity-100', 'translate-y-0');
          }, 10);
        } else {
          mobileMenu.classList.remove('opacity-100', 'translate-y-0');
          mobileMenu.classList.add('opacity-0', '-translate-y-2');
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 300);
        }
        
        const hamburgerIcon = mobileMenuButton.querySelector('.hamburger-icon');
        const closeIcon = mobileMenuButton.querySelector('.close-icon');
        
        if (hamburgerIcon && closeIcon) {
          if (isCurrentlyHidden) {
            hamburgerIcon.classList.add('hidden');
            closeIcon.classList.remove('hidden');
          } else {
            hamburgerIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
          }
        }
      });
    }
    
    if (mobileMenu) {
      mobileMenu.addEventListener('click', function(e) {
        if (e.target === mobileMenu) {
          mobileMenu.classList.remove('opacity-100', 'translate-y-0');
          mobileMenu.classList.add('opacity-0', '-translate-y-2');
          setTimeout(() => {
            mobileMenu.classList.add('hidden');
          }, 300);
          
          if (mobileMenuButton) {
            const hamburgerIcon = mobileMenuButton.querySelector('.hamburger-icon');
            const closeIcon = mobileMenuButton.querySelector('.close-icon');
            if (hamburgerIcon && closeIcon) {
              hamburgerIcon.classList.remove('hidden');
              closeIcon.classList.add('hidden');
            }
          }
        }
      });
    }
  });
</script>
